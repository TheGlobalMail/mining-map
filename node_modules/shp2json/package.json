{
  "name": "shp2json",
  "description": "Convert shapefile zip archives into GeoJSON using ogr2ogr with a streaming interface",
  "version": "0.1.3",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/shp2json.git"
  },
  "main": "index.js",
  "bin": {
    "shp2json": "bin/cli.js"
  },
  "keywords": [
    "shapefile",
    "shp",
    "zip",
    "stream",
    "convert",
    "geojson",
    "geo",
    "gis",
    "json"
  ],
  "directories": {
    "lib": ".",
    "example": "example",
    "test": "test"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "dependencies": {
    "seq": "0.3.x",
    "morestreams": "0.1.x",
    "findit": "0.1.x"
  },
  "devDependencies": {
    "tap": "0.0.x"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "license": "MIT",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "readme": "shp2json\n========\n\nConvert shapefile zip archives to streaming GeoJSON using\n[ogr2ogr](http://gdal.org) and\n[JSONStream](https://github.com/dominictarr/JSONStream).\n\n[![build status](https://secure.travis-ci.org/substack/shp2json.png)](http://travis-ci.org/substack/shp2json)\n\nexample\n=======\n\nshp2json.js\n------------\n\n```js\nvar toJSON = require('shp2json');\ntoJSON(process.stdin).pipe(process.stdout);\nprocess.stdin.resume();\n```\n\nshp2json command\n----------------\n\n```\n$ shp2json ~/citylots.zip 2>/dev/null | head -n5\n{\n\"type\": \"FeatureCollection\",\n\"features\": [\n{ \"type\": \"Feature\", \"properties\": { \"MAPBLKLOT\": \"0001001\", \"BLKLOT\": \n\"0001001\", \"BLOCK_NUM\": \"0001\", \"LOT_NUM\": \"001\", \"FROM_ST\": \"\", \"TO_ST\": \"\",\n \"STREET\": \"\", \"ST_TYPE\": \"\", \"ODD_EVEN\": \"\" }, \"geometry\": { \"type\": \"Polygon\",\n \"coordinates\": [ [ [ -122.422004, 37.808480 ], [ -122.422076, 37.808835 ], \n[ -122.421102, 37.808804 ], [ -122.421063, 37.808601 ], [ -122.422004, 37.808480 ] ] ] } }\n,\n\n```\n\nmethods\n=======\n\nvar toJSON = require('shp2json')\n\nvar outStream = toJSON(inStream)\n--------------------------------\n\nCreate a streaming json output stream `outStream` from the streaming shapefile\nzip archive `inStream`.\n\ncommand-line usage\n==================\n\n```\nUsage: shp2json {infile|-} {outfile|-}\n```\n\ninstall\n=======\n\nMake sure you have the `ogr2ogr` command from [gdal](http://gdal.org).\n\n```\nsudo apt-get install gdal-bin\n```\n\nTo install the library, with [npm](http://npmjs.org) do:\n\n    npm install shp2json\n\nand to install the command do:\n\n    npm install -g shp2json\n\nlicense\n=======\n\nMIT/X11\n",
  "_id": "shp2json@0.1.3",
  "_from": "shp2json@~0.1.3"
}
